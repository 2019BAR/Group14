{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"pacman::p_load(dplyr, d3heatmap)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"sapply(packages, p_load_single, install = install)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"lapply(X = X, FUN = FUN, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"FUN(X[[i]], ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"p_install(package, character.only = TRUE, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withCallingHandlers(utils::install.packages(package, ...), warning = function(w) {\n    if (grepl(\"package.*is not available\", w$message)) {\n        assign(\"try_bioc_p\", TRUE, envir = bioconductor_env)\n    } ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"utils::install.packages(package, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":".install.winbinary(pkgs = bins, lib = lib, contriburl = contrib.url(repos, \n    type2), method = method, available = av2, destdir = destdir, \n    dependencies = NULL, libs_only = libs_only, quiet = quiet, \n    ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"unpackPkgZip(foundpkgs[okp, 2L], foundpkgs[okp, 1L], lib, libs_only, \n    lock)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":".zip.unpack(pkg, tmpDir)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"unzip(zipname, exdir = dest)","line_number":0}],"message":"cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/3.5/PACKAGES'"}